pipeline{
    agent{
        label: Agent-1
    }
    options{
        timeout(time: 30, unit: 'MINUTES')
        disableConcurrentBuilds()
        ansiColor('xterm')
    }
    parameters{
        choice(name: 'CHOICE', choices: ['Apply', 'Destroy'], description: 'Choose terraform action')
    }
    stages{
        stage("Terraform init & apply"){
            when{
                 expression { params.CHOICE == 'Apply' }
                }
            steps{
                   withAWS(region: 'us-east-1', credentials: 'aws-creds'){
                    sh '''
                        cd terraform-jenkins/00-vpc
                        terraform init -reconfigure
                        terraform plan  -out=tfplan
                    '''
                   }

            }
        }
        
        stage("Terraform destroy"){
            when{
                expression { params.CHOICE == 'Destroy' }
                }
            steps{
                 withAWS(region: 'us-east-1', credentials: 'aws-creds'){
                sh '''
                    cd terraform-jenkins/00-vpc
                    terraform destroy -auto-approve
                '''
                }
            }
        }

    }
        
}