pipeline{
    agent{
        label 'Agent-1'
    }
    options{
        timeout(time: 30, unit: 'MINUTES')
        disableConcurrentBuilds()
        ansiColor('xterm')
    }
    parameters{
        choice(name: 'CHOICE', choices: ['Apply', 'Destroy'], description: 'Choose terraform action')
    }
    stages{
        stage('Terraform init & apply'){
            when {
                expression { params.CHOICE == 'Destroy' }
            }
            steps{
                withAWS(region:'us-east-1', credentials: 'terraform-creds') {
                   
                    sh """
                        cd terraform-jenkins/00-vpc
                        terraform init 
                        terraform plan -out=tfplan
                        terraform destroy -auto-approve tfplan
                    """
                   }

            
        
        }
        }
        // stage('Terraform destroy'){
        //     when {
        //         expression { params.CHOICE == 'Destroy' }
        //     }
        //     steps{
                
        //         sh """
        //             cd terraform-jenkins/00-vpc
        //              terraform init 
        //             terraform destroy -auto-approve
        //         """
        //         }
        //     }
        }

    
    post {
        always{
            echo "This sections runs always"
            deleteDir()
        }
        success{
            echo "This section run when pipeline success"
        }
        failure{
            echo "This section run when pipeline failure"
        }
    }
        
}